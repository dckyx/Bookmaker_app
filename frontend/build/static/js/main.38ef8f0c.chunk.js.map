{"version":3,"sources":["components/SpinPage.js","index.js","assets/images/karol.jpeg"],"names":["prizes","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","SpinPage","spinning","setSpinning","useState","result","setResult","roulettePosition","setRoulettePosition","karole","setKarole","karoleVisible","setKaroleVisible","userAuthenticated","setUserAuthenticated","React","createElement","className","style","transform","concat","Array","from","map","_","loop","prize","hue","key","backgroundColor","font","onClick","async","response","fetch","method","headers","Content-Type","X-CSRFToken","status","data","json","parseFloat","message","prizeIndex","indexOf","itemWidth","extraLoops","targetPosition","setTimeout","karolki","id","top","Math","random","left","delay","error","console","disabled","k","src","karol","alt","animationDelay","ReactDOM","createRoot","getElementById","render","StrictMode","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.38ef8f0c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../assets/styles/spinpage.css';\nimport karol from '../assets/images/karol.jpeg';\n\nconst prizes = [0, 2, 5, 10, 20];\n\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction SpinPage() {\n  const [spinning, setSpinning] = useState(false);\n  const [result, setResult] = useState(null);\n  const [roulettePosition, setRoulettePosition] = useState(0);\n  const [karole, setKarole] = useState([]);\n  const [karoleVisible, setKaroleVisible] = useState(true);\n  const [userAuthenticated, setUserAuthenticated] = useState(true);\n\n  const spin = async () => {\n    if (spinning) return;\n\n    setSpinning(true);\n\n    try {\n      const response = await fetch('/api/spin/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken'),\n        },\n      });\n\n      if (response.status === 401 || response.status === 403) {\n        setUserAuthenticated(false);\n        setResult(null);\n        setSpinning(false);\n        return;\n      }\n      if (response.status === 200) {\n        const data = await response.json();\n        const prize = parseFloat(data.result);\n        if (data.message === 'already') {\n          setUserAuthenticated(true);\n          setResult('already');\n          setSpinning(false);\n          return;\n        }\n        // animacja losowania tylko jeśli message !== 'already'\n        if (data.message !== 'already') {\n          setUserAuthenticated(true);\n\n          const prizeIndex = prizes.indexOf(prize);\n          const itemWidth = 120;\n          const extraLoops = 4;\n          const totalItems = prizes.length * extraLoops;\n          const targetPosition = (totalItems + prizeIndex) * itemWidth;\n\n          setRoulettePosition(0);\n\n          setTimeout(() => {\n            setRoulettePosition(-targetPosition);\n          }, 50);\n\n          setTimeout(() => {\n            setResult(prize);\n            setSpinning(false);\n\n            const karolki = Array.from({ length: 15 }, (_, i) => ({\n              id: i,\n              top: Math.random() * 100 + '%',\n              left: Math.random() * 100 + '%',\n              delay: Math.random() * 2,\n            }));\n            setKarole(karolki);\n            setKaroleVisible(true);\n\n            setTimeout(() => {\n              setKaroleVisible(false);\n              setTimeout(() => setKarole([]), 700);\n            }, 3500);\n          }, 5000);\n        }\n      }\n    } catch (error) {\n      console.error('Błąd podczas spinowania:', error);\n      setSpinning(false);\n    }\n  };\n\n  return (\n    <div className=\"container text-center spin-page-container\">\n      <h2>CODZIENNY BONUS</h2>\n\n      <div className=\"roulette-container\">\n        <div\n          className=\"roulette\"\n          style={{ transform: `translateX(${roulettePosition}px)` }}\n        >\n          {Array.from({ length: 7 }).map((_, loop) =>\n            prizes.map((prize, i) => {\n              const globalIndex = loop * prizes.length + i;\n              const hue = (globalIndex * 47) % 360; // ładnie się rozkłada\n              return (\n                <div\n                  className=\"prize-item\"\n                  key={`${loop}-${i}`}\n                  style={{\n                    backgroundColor: `hsl(${hue}, 85%, 70%)`,\n                    font: `solid black`\n                  }}\n                >\n                  {prize} zł\n                </div>\n              );\n            })\n          )}\n        </div>\n        <div className=\"indicator\">▼</div>\n      </div>\n\n      {!userAuthenticated ? (\n        <div className=\"alert alert-danger mt-4\">\n          Musisz być zalogowany, aby skorzystać z tej wspaniałej funkcjonalności.\n        </div>\n      ) : result === 'already' ? (\n        <div className=\"alert alert-warning mt-4\">\n          Już dziś kręciłeś! Wróć jutro po więcej szczęścia.\n        </div>\n      ) : (\n        <button className=\"btn btn-primary mt-4\" onClick={spin} disabled={spinning}>\n          SPIN\n        </button>\n      )}\n\n      {!spinning && result !== null && result !== 'already' && (\n        result === 0 ? (\n          <div className=\"alert alert-warning mt-3\">\n            Nic nie wygrałeś...\n          </div>\n        ) : (\n          <div className=\"alert alert-success mt-3\">\n            Gratulacje! Wylosowałeś {result} zł!!!\n          </div>\n        )\n      )}\n\n      {karole.map((k) => (\n        <img\n          key={k.id}\n          src={karol}\n          alt=\"karol\"\n          className={`karol-float-global ${karoleVisible ? 'show' : 'hide'}`}\n          style={{\n            top: k.top,\n            left: k.left,\n            animationDelay: `${k.delay}s`,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default SpinPage;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport SpinPage from './components/SpinPage';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <SpinPage />\n  </React.StrictMode>\n);","module.exports = __webpack_public_path__ + \"static/media/karol.ef1dc56d.jpeg\";"],"sourceRoot":""}